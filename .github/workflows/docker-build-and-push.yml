name: Docker Build and Push

on:
  push:
    paths:
      - 'app.py'
      - 'Dockerfile'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Get latest version
      id: latest_version
      run: |
        latest_tag=$(docker pull -q ${{ secrets.DOCKERHUB_USERNAME }}/netcheck-api:latest | awk -F':' '/^Digest: / {split($2, digest, "@"); print $3}')
        if [ -z "${latest_tag}" ]; then
          echo "No existing versions found. Setting initial version to 1.5"
          echo "::set-output name=VERSION::1.5"
        else
          echo "Latest version found: ${latest_tag}"
          echo "::set-output name=VERSION::${latest_tag}"
        fi

    - name: Increment version
      id: increment_version
      run: |
        IFS='.' read -r major minor <<< "${{ steps.latest_version.outputs.VERSION }}"
        echo "::set-output name=MAJOR::${major}"
        echo "::set-output name=MINOR::${minor}"
        echo "::set-output name=VERSION::$(($major)).$(($minor + 1))"

    - name: Build and Push Docker Image
      run: |
        VERSION=$(git rev-list --count HEAD)
        docker buildx create --use
        # docker buildx build --load  --platform linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/netcheck-api:${{ steps.increment_version.outputs.VERSION }}    .
        # docker push ${{ secrets.DOCKERHUB_USERNAME }}/netcheck-api:${{ steps.increment_version.outputs.VERSION }}
        docker buildx build --load  --platform linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/netcheck-api:$VERSION -t ${{ secrets.DOCKERHUB_USERNAME }}/netcheck-api:latest    .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/netcheck-api:$VERSION
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/netcheck-api:latest
    
    - name: push README to Dockerhub
      uses: christian-korneck/update-container-description-action@v1
      env:
        DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
      with:
        destination_container_repo: ${{ secrets.DOCKERHUB_USERNAME }}/netcheck-api
        provider: dockerhub
        readme_file: 'Readme.md'
